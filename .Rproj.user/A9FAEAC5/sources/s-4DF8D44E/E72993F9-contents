---
title: "Avaliação Fim de Semestre - Coordenação"
author: "Escola de Relações Internacionais da Fundação Getulio Vargas"
date: "Primeira versão: 22-06-2020. Atualização: `r format(Sys.time(), '%d-%m-%Y')`"

output:
  html_document:
    df_print: paged
    toc: yes
    toc_depth: 3
    number_sections: true
  word_document:
    toc: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r data, echo=FALSE, include=FALSE}
# packages ----
if(require(tidyverse) == F) {install.packages("tidyverse"); require(tidyverse)}
if(require(quanteda) == F) {install.packages("quanteda"); require(quanteda)}
if(require(stringi) == F) {install.packages("stringi"); require(stringi)}
if(require(stringr) == F) {install.packages("stringr"); require(stringr)}
if(require(haven) == F) {install.packages("haven"); require(haven)}
if(require(scales) == F) {install.packages("scales"); require(scales)}
if(require(kableExtra) == F) {install.packages("kableExtra"); require(kableExtra)}
if(require(knitr) == F) {install.packages("knitr"); require(knitr)}
if(require(flextable) == F) {install.packages("flextable"); require(flextable)}
if(require(officer) == F) {install.packages("officer"); require(knofficeritr)}
if(require(readr) == F) {install.packages("readr"); require(readr)}
if(require(here) == F) {install.packages("here"); require(here)}

# otima ref para tabelas no word:https://davidgohel.github.io/flextable/articles/overview.html

# data ----
# rm(list=ls())
#setwd("..")
load(here( "data", "questions-final-term-eval.rda"))
# load(here( "data", "data-final-term-eval.rda"))
# load(here( "data", "coord-final-term-eval.rda"))
load(here( "data", "coord-eval-consolidated-202001.rda"))

```

\newline

# Número de respostas por disciplina:

```{r q3, echo=FALSE}
aux <- coord %>% #filter(eval_type == "final-202001") %>% 
  select(eval_type, cohort, course_name, wm) %>%  
  filter(!is.na(wm)) %>% 
  group_by(eval_type, cohort, course_name) %>% summarise(respostas = n()) %>% ungroup() %>%
  #mutate(perc=round((respostas/sum(respostas)*100), 2)) %>% 
  arrange(desc(respostas)) %>%
  select(eval_type, cohort, course_name, respostas) #%>% 
  #rename("Turma" := cohort, "Disciplina" := course_name, "Respostas" := respostas)

# kable(aux) %>% kable_styling()

aux %>%
  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, respostas, fill = eval_type)) + 
  geom_bar(stat = "identity", position = "dodge") + 
  scale_fill_manual(values = c("#787878", "#000000")) +
  facet_wrap(~cohort, scales = "free_x") +
  #scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  theme_bw() + 
#  facet_wrap(~cohort) +
  theme(legend.title = element_blank(),
        axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))


```

\newline
\newline

# `r qbd$questoes_orig[3]`

- Disciplinas ordenadas pela média dos resultados.

\newline

```{r q3.1, echo=FALSE, message=FALSE, warning=FALSE}
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, cded) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(cded, na.rm = T), med = median(cded, na.rm = T)) %>% 
  arrange(desc(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, cded) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
  ggplot(aes(course_name, cded)) +  
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
#  geom_boxplot() +
#  geom_boxplot(width=0.1) +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

\newline
\newline

# `r qbd$questoes_orig[4]`

- Disciplinas ordenadas pela média dos resultados.

\newline

```{r q4, echo=FALSE, message=FALSE, warning=FALSE}
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, wm) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(wm, na.rm = T), med = median(wm, na.rm = T)) %>% 
  arrange(desc(m)) %>% select(course_name) %>% ungroup()

coord %>% #filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, wm, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, wm)) + 
  geom_violin(aes(colour = eval_type), draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  scale_color_manual(values = c("#787878", "#000000")) +
  # geom_boxplot(aes(colour = eval_type)) + 
  geom_jitter(alpha = .08) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r qbd$questoes_orig[5]`

- Disciplinas ordenadas pela média dos resultados.

\newline

```{r q5, echo=FALSE, message=FALSE, warning=FALSE}
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, ccontrib) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(ccontrib, na.rm = T), med = median(ccontrib, na.rm = T)) %>% 
  arrange(desc(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, ccontrib, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, ccontrib)) + # geom_boxplot(aes(colour = eval_type)) +
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  # geom_boxplot() +
  geom_jitter(alpha = .2) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r qbd$questoes_orig[6]`

\newline
\newline

```{r q6, echo=FALSE, message=FALSE, warning=FALSE}
# cdiff
disc <- coord %>% select(course, course_name, cdiff) %>% 
  group_by(course, course_name, cdiff) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>% filter(!is.na(cdiff)) %>%
  arrange(desc(count)) %>% filter(cdiff == "Não") %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, cdiff) %>% 
  group_by(cohort, course, course_name, cdiff) %>%
  summarise(count=n()) %>% filter(!is.na(cdiff)) %>%
  mutate(perc=count/sum(count)) %>%  ungroup() %>%
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
  mutate(cdiff = factor(cdiff, levels = c("Sim", "Não"))) %>%
  ggplot(aes(fill = cdiff, x = course_name, y = perc)) + geom_bar(stat = "identity",
                                                                  position="dodge") +
  scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  scale_fill_grey() +
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
#        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r qbd$questoes_orig[7]`

```{r q7.1, echo=FALSE}
# cdiffr 
aux <- coord %>% filter(eval_type == "final-202001") %>% 
#  filter(cohort == "2019") %>% 
  select(id, cohort, course_name, cdiffr) %>%  
  filter(!is.na(cdiffr)) %>% mutate(text = cdiffr, doc_id = id) %>% 
  select(doc_id, cohort, course_name, text) 
# corp <- corpus(aux)

corp <- aux %>%
  mutate(text = stri_trans_general(text, "Latin-ASCII")) %>%
  mutate(text = str_remove_all(text, "[[:digit:]]")) %>%
  corpus(docid_field = "doc_id", text_field = "text") %>% 
  tokens(remove_punct = TRUE) %>%
  tokens_tolower() %>%
  tokens_remove(stopwords(source = "stopwords-iso", language = "pt"), min_nchar = 2) %>%
  tokens_wordstem(language = "pt") %>%
  dfm() #%>%
  #dfm_select(pattern = c("aul"),  selection = "remove") #
#  dfm_trim(min_docfreq = 0.01, docfreq_type = "prop") %>%  

# topfeatures(corp)

# col <- sapply(seq(0.1, 1, 0.1), function(x) adjustcolor("#1F78B4", x))
# textplot_wordcloud(corpdisc, comparison = TRUE)

corp %>% dfm_group(groups = "cohort") %>%
  textplot_wordcloud(#adjust = 0.1, 
    # myColors <- c("#000000","#787878","#C0C0C0","#DCDCDC")
    color = c("#787878", "#000000"),
    ordered_color = T, 
    min_count = 3,
    max_words = 200,
                    # random_order = FALSE,
                    #rotation = FALSE, 
    comparison = TRUE)

```

## Conteúdo das respostas:

```{r q7.2, echo=FALSE}
# cdiffr
aux <- coord %>% filter(eval_type == "final-202001") %>% 
  select(cohort, course_name, cdiffr) %>%  
  filter(!is.na(cdiffr)) %>% 
  rename("Turma" := cohort,"Disciplina":= course_name, !!qbd$questoes_orig[7]:= cdiffr) 

#  group_by(cohort, course_name) %>% summarise(respostas = n()) %>% ungroup() %>%
#  mutate(perc=round((respostas/sum(respostas)*100), 2)) %>% arrange(desc(respostas))
kable(aux) %>% kable_styling()
```

# `r qbd$questoes_orig[8]`

\newline
\newline

## Turma 2019

```{r q8.1, echo=FALSE, message=FALSE, warning=FALSE}
# ohseek ----
# filter(eval_type == "final-202001")
disc <- coord %>% select(cohort, course, course_name, eval_type, ohseek) %>% 
  filter(cohort == "2019") %>%
  group_by(eval_type, course, course_name, ohseek) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>% filter(!is.na(ohseek)) %>%
  arrange(desc(count)) %>% filter(ohseek == "Sim") %>% select(course_name) %>% ungroup()

coord %>% select(eval_type, cohort, course, course_name, ohseek) %>% 
  filter(cohort == "2019") %>%
  group_by(eval_type, course, course_name, ohseek) %>%
  summarise(count=n()) %>% filter(!is.na(ohseek)) %>%
  mutate(perc=count/sum(count)) %>%  ungroup() %>%
  mutate(course_name = factor(course_name, levels = unique(disc$course_name))) %>%
  mutate(ohseek = factor(ohseek, levels = c("Sim", "Não"))) %>%
  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(fill = ohseek, x = course_name, y = perc)) + geom_bar(stat = "identity",
                                                                  position="dodge") +
  scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  scale_fill_grey() +
  theme_bw() + 
  facet_wrap(~eval_type, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        #        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

## Turma 2020

```{r q8.2, echo=FALSE, message=FALSE, warning=FALSE}
# ohseek ----
# filter(eval_type == "final-202001")
disc <- coord %>% select(cohort, course, course_name, eval_type, ohseek) %>% 
  filter(cohort == "2020") %>%
  group_by(eval_type, course, course_name, ohseek) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>% filter(!is.na(ohseek)) %>%
  arrange(desc(count)) %>% filter(ohseek == "Sim") %>% select(course_name) %>% ungroup()

coord %>% select(eval_type, cohort, course, course_name, ohseek) %>% 
  filter(cohort == "2020") %>%
  group_by(eval_type, course, course_name, ohseek) %>%
  summarise(count=n()) %>% filter(!is.na(ohseek)) %>%
  mutate(perc=count/sum(count)) %>%  ungroup() %>%
  mutate(course_name = factor(course_name, levels = unique(disc$course_name))) %>%
  mutate(ohseek = factor(ohseek, levels = c("Sim", "Não"))) %>%
  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(fill = ohseek, x = course_name, y = perc)) + geom_bar(stat = "identity",
                                                                  position="dodge") +
  scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  scale_fill_grey() +
  theme_bw() + 
  facet_wrap(~eval_type, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        #        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))

```
\newline
\newline

## `r qbd$questoes_orig[9]`
\newline
\newline

```{r q9, echo=FALSE}
# ohreason ----
# filter(eval_type == "final-202001") %>%
aux <- coord %>%   filter(eval_type == "final-202001") %>%
  select(cohort, ohreason) %>% 
  filter(cohort == "2020" & !is.na(ohreason)) 

q9bd1 <- tibble(q9 = unlist(str_split(aux$ohreason, ", ")))
q9bd1 <- q9bd1 %>% mutate(cohort = "2020")

aux <- coord %>%   filter(eval_type == "final-202001") %>%
  select(cohort, ohreason) %>% 
  filter(cohort == "2019" & !is.na(ohreason)) 

q9bd2 <- tibble(q9 = unlist(str_split(aux$ohreason, ", ")))
q9bd2 <- q9bd2 %>% mutate(cohort = "2019")

q9bd <- bind_rows(q9bd1, q9bd2)
q9bd <- q9bd %>% filter(!is.na(q9))
q9bd <- q9bd %>% mutate(q9 = str_replace(q9, "\u007f", ""))
  
q9bd <- q9bd %>%  
  group_by(cohort, q9) %>% 
  summarise(count=n()) %>% 
  filter(!is.na(q9)) %>%
  mutate(perc=count/sum(count)) %>%
  mutate(perc=round(perc, 4)) %>%
  arrange(desc(perc)) 
  
q9bd %>% top_n(3, perc) %>% 
  mutate(cat = c("A", "B", "C")) %>%
  mutate(cat = factor(cat, levels= cat)) %>%
  ggplot(aes(cat, perc)) + geom_bar(stat = "identity") + 
  scale_y_continuous(labels = scales::percent) +
  scale_x_discrete(drop=FALSE) + theme_bw() + 
  facet_wrap(~cohort) +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank())
```

\newline

### Principais objetivos pelos quais procurou atendimento:

\newline

```{r q9.1, echo=FALSE}
aux <- q9bd %>% top_n(3, perc) %>% 
  mutate(cat = c("A", "B", "C")) %>%
  mutate(cat = factor(cat, levels= cat)) %>% 
#  filter(cohort == "2019") %>% 
  ungroup() %>%
  select(cohort, cat, q9) %>% rename("Categoria":= cat, !!qbd$questoes_orig[9]:= q9) %>%
  arrange(cohort, Categoria)

kable(aux) %>% kable_styling()

```

### Todos principais objetivos pelos quais procurou atendimento: Turma 2019

\newline

```{r q9.2, echo=FALSE}
table1 <- q9bd %>% 
  filter(cohort == "2019") %>% ungroup() %>%
  mutate(perc = perc*100) %>% arrange(desc(perc)) %>%
  select(q9, count, perc) %>%
  rename(!!paste0("2019-", qbd$questoes_orig[9]):= q9, "n" := count, "%" := perc)
  

kable(table1) %>% kable_styling()

```

\newline

### Todos principais objetivos pelos quais procurou atendimento: Turma 2020

\newline

```{r q9.3, echo=FALSE}

table2 <- q9bd %>% 
  filter(cohort == "2020") %>% ungroup() %>%
  mutate(perc = perc*100) %>% arrange(desc(perc)) %>%
  select(q9, count, perc) %>%
  rename(!!paste0("2020-", qbd$questoes_orig[9]):= q9, "n" := count, "%" := perc)

kable(table2) %>% kable_styling()

```

\newline
\newline

## `r qbd$questoes_orig[10]`

\newline
\newline

```{r q10, echo=FALSE, message=FALSE, warning=FALSE}
# oheff ----
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, oheff) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(oheff, na.rm = T), med = median(oheff, na.rm = T)) %>% 
  arrange(desc(m)) %>% filter(!is.na(med)) %>% select(course_name) %>% ungroup()

coord %>% #filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, oheff, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  filter(!is.na(oheff)) %>%
  ggplot(aes(course_name, oheff)) + 
  geom_violin(aes(colour = eval_type), draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
#  geom_boxplot(aes(colour = eval_type)) + 
  scale_color_manual(values = c("#787878", "#000000")) +
  geom_jitter(alpha = .1#, width = 0.25
              ) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r str_replace(qbd$questoes_orig[11], " no âmbito dessa disciplina[[:print:]]+","\\?")`

```{r q11, echo=FALSE, message=FALSE, warning=FALSE}

q <- coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, writexppt:emoskill)  

qname <- tibble(v = names(q)[2:length(names(q))],
                n = str_extract(qbd$questoes_orig[11:21], "\\[[[:print:]]+\\]")
                ) %>% mutate(n = str_replace_all(n, "\\[|\\]", "")) %>%
  mutate(n = str_replace_all(n, "\\([[:print:]]+\\)", ""))

q <- q %>%  pivot_longer(-cohort, names_to = "question", values_to = "answer") %>%
  filter(!is.na(answer)) %>% 
  filter(answer != "Não se aplica")

q <- left_join(q, qname, by = c("question" = "v"))

myColors <- c("#000000","#787878","#C0C0C0","#DCDCDC")

q %>% filter(!is.na(answer)) %>% 
  filter(answer != "Não se aplica") %>%
  group_by(cohort, n, answer) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>%
  mutate(answer = factor(answer, levels = c("Muito satisfatória", 
                                              "Satisfatória",
                                              "Pouco satisfatória",
                                              "Insatisfatória"))) %>% 
  ggplot(aes(x = n , y = perc, fill = answer)) +
    geom_bar(stat="identity", width = 0.7) +
    scale_fill_manual (values=myColors) +
    coord_flip() + theme_bw() + facet_wrap(~cohort) +
    theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        #        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank()
        )

```

\newline
\newline

# `r qbd$questoes_orig[22]`

\newline
\newline

```{r q22, echo=FALSE, message=FALSE, warning=FALSE}
# sylskill ----
# filter(eval_type == "final-202001")
disc <- coord %>% 
  filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, sylskill) %>% 
  group_by(course, course_name, sylskill) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>% filter(!is.na(sylskill)) %>%
  arrange(desc(count)) %>% filter(sylskill == "Sim") %>% select(course_name) %>% ungroup()

coord %>% 
  filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, sylskill) %>% 
  # filter(cohort == "2019") %>% 
  filter(sylskill %in% c("Sim", "Não")) %>%
  group_by(cohort, course, course_name, sylskill) %>%
  summarise(count=n()) %>% filter(!is.na(sylskill)) %>%
  mutate(perc=count/sum(count)) %>%  ungroup() %>%
  mutate(course_name = factor(course_name, levels = unique(disc$course_name))) %>%
  mutate(sylskill = factor(sylskill, levels = c("Sim", "Não"))) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(fill = sylskill, x = course_name, y = perc)) + geom_bar(stat = "identity",
                                                                  position="dodge") +
  scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  scale_fill_grey() +
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        #        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))

```


\newline
\newline

# `r qbd$questoes_orig[23]`

\newline
\newline

```{r q23, echo=FALSE, message=FALSE, warning=FALSE}
# clearinst
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, clearinst) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(clearinst, na.rm = T), med = median(clearinst, na.rm = T)) %>% 
  arrange(desc(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, clearinst, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, clearinst)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  # geom_boxplot(aes(colour = eval_type)) +
  # geom_boxplot() +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r qbd$questoes_orig[24]`

\newline
\newline

```{r q24, echo=FALSE, message=FALSE, warning=FALSE}
# coursemat
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, coursemat) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(coursemat, na.rm = T), med = median(coursemat, na.rm = T)) %>% 
  arrange(desc(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, coursemat, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, coursemat)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  # geom_boxplot(aes(colour = eval_type)) +
  # geom_boxplot() +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r qbd$questoes_orig[25]`

\newline
\newline

```{r q25, echo=FALSE, message=FALSE, warning=FALSE}
# coursetest
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, coursetest) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(coursetest, na.rm = T), med = median(coursetest, na.rm = T)) %>% 
  arrange(desc(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, coursetest, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, coursetest)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  # geom_boxplot(aes(colour = eval_type)) +
  # geom_boxplot() +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r qbd$questoes_orig[26]`

\newline
\newline

```{r q26, echo=FALSE, message=FALSE, warning=FALSE}
# teachpunc
disc <- coord %>% 
  filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, teachpunc) %>% 
  group_by(course, course_name, teachpunc) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>% filter(!is.na(teachpunc)) %>%
  arrange(desc(count)) %>% filter(teachpunc == "Sim") %>% select(course_name) %>% ungroup()

coord %>% 
  filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, teachpunc) %>% 
  # filter(cohort == "2019") %>% 
  filter(teachpunc %in% c("Sim", "Não")) %>%
  group_by(cohort, course, course_name, teachpunc) %>%
  summarise(count=n()) %>% filter(!is.na(teachpunc)) %>%
  mutate(perc=count/sum(count)) %>%  ungroup() %>%
  mutate(course_name = factor(course_name, levels = unique(disc$course_name))) %>%
  mutate(teachpunc = factor(teachpunc, levels = c("Sim", "Não"))) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(fill = teachpunc, x = course_name, y = perc)) + geom_bar(stat = "identity",
                                                                  position="dodge") +
  scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  scale_fill_grey() +
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        #        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))

```

\newline
\newline

# `r qbd$questoes_orig[27]`

\newline
\newline

```{r q27, echo=FALSE, message=FALSE, warning=FALSE}
# teachprep
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, teachprep) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(teachprep, na.rm = T), med = median(teachprep, na.rm = T)) %>% 
  arrange(desc(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, teachprep, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, teachprep)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  # geom_boxplot(aes(colour = eval_type)) +
#  geom_boxplot() +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))

```

\newline
\newline

# `r qbd$questoes_orig[28]`

\newline
\newline

```{r q28, echo=FALSE, message=FALSE, warning=FALSE}
# teachfeedb
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, teachfeedb) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(teachfeedb, na.rm = T), med = median(teachfeedb, na.rm = T)) %>% 
  arrange(desc(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, teachfeedb, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, teachfeedb)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  # geom_boxplot(aes(colour = eval_type)) +
  # geom_boxplot() +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))

```



\newline
\newline

# `r qbd$questoes_orig[30]`

\newline
\newline

## Turma 2019

```{r q30.1, echo=FALSE, message=FALSE, warning=FALSE}
# taseek ----
# filter(eval_type == "final-202001")
disc <- coord %>% select(cohort, course, course_name, eval_type, taseek) %>% 
  filter(cohort == "2019") %>%
  group_by(course, course_name, taseek) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>% filter(!is.na(taseek)) %>%
  arrange(desc(count)) %>% filter(taseek == "Sim") %>% select(course_name) %>% ungroup()

coord %>% select(eval_type, cohort, course, course_name, taseek) %>% 
  filter(cohort == "2019") %>% filter(taseek %in% c("Sim", "Não")) %>%
  group_by(eval_type, course, course_name, taseek) %>%
  summarise(count=n()) %>% filter(!is.na(taseek)) %>%
  mutate(perc=count/sum(count)) %>%  ungroup() %>%
  mutate(course_name = factor(course_name, levels = unique(disc$course_name))) %>%
  mutate(taseek = factor(taseek, levels = c("Sim", "Não"))) %>%
  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(fill = taseek, x = course_name, y = perc)) + geom_bar(stat = "identity",
                                                                  position="dodge") +
  scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  scale_fill_grey() +
  theme_bw() + 
  facet_wrap(~eval_type, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        #        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))

```

## Turma 2020

```{r q30.2, echo=FALSE, message=FALSE, warning=FALSE}
# taseek ----
# filter(eval_type == "final-202001")
disc <- coord %>% select(cohort, course, course_name, eval_type, taseek) %>% 
  filter(cohort == "2020") %>%
  group_by(course, course_name, taseek) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>% filter(!is.na(taseek)) %>%
  arrange(desc(count)) %>% filter(taseek == "Sim") %>% select(course_name) %>% ungroup()

coord %>% select(eval_type, cohort, course, course_name, taseek) %>% 
  filter(cohort == "2020") %>% filter(taseek %in% c("Sim", "Não")) %>%
  group_by(eval_type, course, course_name, taseek) %>%
  summarise(count=n()) %>% filter(!is.na(taseek)) %>%
  mutate(perc=count/sum(count)) %>%  ungroup() %>%
  mutate(course_name = factor(course_name, levels = unique(disc$course_name))) %>%
  mutate(taseek = factor(taseek, levels = c("Sim", "Não"))) %>%
  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(fill = taseek, x = course_name, y = perc)) + geom_bar(stat = "identity",
                                                                  position="dodge") +
  scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  scale_fill_grey() +
  theme_bw() + 
  facet_wrap(~eval_type, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        #        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))

```


\newline
\newline

# `r qbd$questoes_orig[31]`

\newline
\newline

```{r q31, echo=FALSE, message=FALSE, warning=FALSE}
# tapunc
disc <- coord %>% 
  filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, tapunc) %>% 
  group_by(course, course_name, tapunc) %>% 
  summarise(count=n()) %>% 
  mutate(perc=count/sum(count)) %>% filter(!is.na(tapunc)) %>%
  arrange(desc(count)) %>% filter(tapunc == "Sim") %>% select(course_name) %>% ungroup()

coord %>% 
  filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, tapunc) %>% 
  # filter(cohort == "2019") %>% 
  filter(tapunc %in% c("Sim", "Não")) %>%
  group_by(cohort, course, course_name, tapunc) %>%
  summarise(count=n()) %>% filter(!is.na(tapunc)) %>%
  mutate(perc=count/sum(count)) %>%  ungroup() %>%
  mutate(course_name = factor(course_name, levels = unique(disc$course_name))) %>%
  mutate(tapunc = factor(tapunc, levels = c("Sim", "Não"))) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(fill = tapunc, x = course_name, y = perc)) + geom_bar(stat = "identity",
                                                                  position="dodge") +
  scale_y_continuous(labels = scales::percent) +
  #scale_x_discrete(drop=FALSE) + 
  scale_fill_grey() +
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        #        legend.key = element_rect(color = "gray", fill = "black"),
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))

```

\newline
\newline

# `r qbd$questoes_orig[32]`

\newline
\newline

```{r q32, echo=FALSE, message=FALSE, warning=FALSE}
# taeff ----
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, taeff) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(taeff, na.rm = T), med = median(taeff, na.rm = T)) %>% 
  arrange(desc(m)) %>% filter(!is.na(med)) %>% select(course_name) %>% ungroup()

coord %>% #filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, taeff, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  filter(!is.na(taeff)) %>%
  ggplot(aes(course_name, taeff)) + 
  geom_violin(aes(colour = eval_type), draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
#  geom_boxplot(aes(colour = eval_type)) + 
  scale_color_manual(values = c("#787878", "#000000")) +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r qbd$questoes_orig[33]`

\newline
\newline

```{r q33, echo=FALSE, message=FALSE, warning=FALSE}
# taprep ----
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, taprep) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(taprep, na.rm = T), med = median(taprep, na.rm = T)) %>% 
  arrange(desc(m)) %>% filter(!is.na(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, taprep, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
  filter(!is.na(taprep)) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, taprep)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  # geom_boxplot(aes(colour = eval_type)) +
  # geom_boxplot() +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r qbd$questoes_orig[34]`

\newline
\newline

```{r q34, echo=FALSE, message=FALSE, warning=FALSE}
# taresult ----
disc <- coord %>% filter(eval_type == "final-202001") %>%
  select(course, course_name, taresult) %>% 
  group_by(course, course_name) %>% 
  summarise(count=n(), m = mean(taresult, na.rm = T), med = median(taresult, na.rm = T)) %>% 
  arrange(desc(m)) %>% filter(!is.na(m)) %>% select(course_name) %>% ungroup()

coord %>% filter(eval_type == "final-202001") %>%
  select(cohort, course, course_name, taresult, eval_type) %>% 
  mutate(course_name = factor(course_name, levels = disc$course_name)) %>%
  filter(!is.na(taresult)) %>%
#  mutate(eval_type = factor(eval_type, levels = c("mid-202001", "final-202001"))) %>%
  ggplot(aes(course_name, taresult)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), adjust = .8) +
  # geom_boxplot(aes(colour = eval_type)) +
  # geom_boxplot() +
  geom_jitter(alpha = .1) + 
  theme_bw() + 
  facet_wrap(~cohort, scales = "free_x") +
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 65,
                                   hjust = 1,
                                   vjust = 1))
```

\newline
\newline

# `r str_replace(qbd$questoes_orig[35], " sobre[[:print:]]+", ":")`

\newline
\newline

```{r q35, echo=FALSE}
# comments 
aux <- coord %>% filter(eval_type == "final-202001") %>% 
#  filter(cohort == "2019") %>% 
  select(id, cohort, course_name, comments) %>%  
  filter(!is.na(comments)) %>% mutate(text = comments, doc_id = id) %>% 
  select(doc_id, cohort, course_name, text) 
# corp <- corpus(aux)

corp <- aux %>%
  mutate(text = stri_trans_general(text, "Latin-ASCII")) %>%
  mutate(text = str_remove_all(text, "[[:digit:]]")) %>%
  corpus(docid_field = "doc_id", text_field = "text") %>% 
  tokens(remove_punct = TRUE) %>%
  tokens_tolower() %>%
  tokens_remove(stopwords(source = "stopwords-iso", language = "pt"), min_nchar = 2) %>%
  tokens_wordstem(language = "pt") %>%
  dfm() #%>%
  #dfm_select(pattern = c("aul"),  selection = "remove") #
#  dfm_trim(min_docfreq = 0.01, docfreq_type = "prop") %>%  

# topfeatures(corp)

# col <- sapply(seq(0.1, 1, 0.1), function(x) adjustcolor("#1F78B4", x))
# textplot_wordcloud(corpdisc, comparison = TRUE)

corp %>% dfm_group(groups = "cohort") %>%
  textplot_wordcloud(#adjust = 0.1, 
    # myColors <- c("#000000","#787878","#C0C0C0","#DCDCDC")
    color = c("#787878", "#000000"),
    ordered_color = T, 
    min_count = 3,
    max_words = 200,
                    # random_order = FALSE,
                    #rotation = FALSE, 
    comparison = TRUE)

```

## Conteúdo das respostas:

```{r q35.2, echo=FALSE}
# comments
aux <- coord %>% filter(eval_type == "final-202001") %>% 
  select(cohort, course_name, comments) %>%  
  filter(!is.na(comments)) %>% 
  rename("Turma" := cohort, "Disciplina":= course_name, !!qbd$questoes_orig[35]:= comments) 

#  group_by(cohort, course_name) %>% summarise(respostas = n()) %>% ungroup() %>%
#  mutate(perc=round((respostas/sum(respostas)*100), 2)) %>% arrange(desc(respostas))
kable(aux) %>% kable_styling()
```
\newline
\newline